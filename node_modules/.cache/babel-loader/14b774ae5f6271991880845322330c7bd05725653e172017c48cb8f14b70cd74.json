{"ast":null,"code":"import axios from\"axios\";export const getBoard=gameId=>async dispatch=>{try{//fetchs\nconst playerPromise=await axios.get(\"http://game.bons.me/api/games/\".concat(gameId,\"/player\"));const monsterPromise=await axios.get(\"http://game.bons.me/api/games/\".concat(gameId,\"/monster\"));const gamePromise=await axios.get(\"http://game.bons.me/api/games/\".concat(gameId));//PlayerCards\nconst playerCardPromise=await axios.get(\"http://game.bons.me/api/players/\".concat(playerPromise.data.id,\"/cards\"));//Responses\nconst game=gamePromise.data;const player=playerPromise.data;const monster=monsterPromise.data;const playerCards=playerCardPromise.data;dispatch({type:\"GAME_DATA\",payload:{gameInfo:game,playerInfo:player,monsterInfo:monster,playerCards:playerCards}});}catch(error){console.log(error.message);}};export const nextTurn=(cardId,gameId)=>dispatch=>{axios.post(\"http://game.bons.me/api/games/\".concat(gameId,\"/next-turn\"),{\"card\":cardId}).then(res=>{dispatch({type:\"MONSTER_EFFECT\",payload:res.data.monsterEffect});dispatch(getBoard(res.data.game.id));}).catch(e=>console.log(e.message));};export const NewGame=name=>dispatch=>{return axios.post('http://game.bons.me/api/games',{name:name}).then(res=>res.data.id).then(id=>dispatch(getBoard(id))).catch(e=>console.log(e.message));};","map":{"version":3,"names":["axios","getBoard","gameId","dispatch","playerPromise","get","concat","monsterPromise","gamePromise","playerCardPromise","data","id","game","player","monster","playerCards","type","payload","gameInfo","playerInfo","monsterInfo","error","console","log","message","nextTurn","cardId","post","then","res","monsterEffect","catch","e","NewGame","name"],"sources":["/Users/eri/adventureTime/src/store/actions/index.js"],"sourcesContent":["\nimport axios from \"axios\"\n\nexport const getBoard = (gameId) => async dispatch => {\n    try {\n\n        //fetchs\n        const playerPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/player`)\n        const monsterPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/monster`)\n        const gamePromise = await axios.get(`http://game.bons.me/api/games/${gameId}`)\n\n        //PlayerCards\n        const playerCardPromise = await axios.get(`http://game.bons.me/api/players/${playerPromise.data.id}/cards`)\n\n        //Responses\n        const game = gamePromise.data\n        const player = playerPromise.data\n        const monster = monsterPromise.data\n        const playerCards = playerCardPromise.data\n\n        dispatch({\n            type: \"GAME_DATA\", payload: {\n                gameInfo: game,\n                playerInfo: player,\n                monsterInfo: monster,\n                playerCards: playerCards\n            }\n        })\n    }\n    catch (error) {\n        console.log(error.message)\n    }\n\n\n}\n\nexport const nextTurn = (cardId, gameId) => dispatch => {\n    axios.post(`http://game.bons.me/api/games/${gameId}/next-turn`, { \"card\": cardId })\n        .then(res => {\n            dispatch({ type: \"MONSTER_EFFECT\", payload: res.data.monsterEffect })\n            dispatch(getBoard(res.data.game.id))\n        })\n        .catch(e => console.log(e.message))\n\n}\n\nexport const NewGame = (name) => dispatch => {\n    return axios.post('http://game.bons.me/api/games', { name: name })\n        .then(res => res.data.id)\n        .then(id => dispatch(getBoard(id)))\n        .catch(e => console.log(e.message))\n}\n\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,MAAM,CAAAC,QAAQ,CAAIC,MAAM,EAAK,KAAM,CAAAC,QAAQ,EAAI,CAClD,GAAI,CAEA;AACA,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAJ,KAAK,CAACK,GAAG,kCAAAC,MAAA,CAAkCJ,MAAM,WAAS,CAAC,CACvF,KAAM,CAAAK,cAAc,CAAG,KAAM,CAAAP,KAAK,CAACK,GAAG,kCAAAC,MAAA,CAAkCJ,MAAM,YAAU,CAAC,CACzF,KAAM,CAAAM,WAAW,CAAG,KAAM,CAAAR,KAAK,CAACK,GAAG,kCAAAC,MAAA,CAAkCJ,MAAM,CAAE,CAAC,CAE9E;AACA,KAAM,CAAAO,iBAAiB,CAAG,KAAM,CAAAT,KAAK,CAACK,GAAG,oCAAAC,MAAA,CAAoCF,aAAa,CAACM,IAAI,CAACC,EAAE,UAAQ,CAAC,CAE3G;AACA,KAAM,CAAAC,IAAI,CAAGJ,WAAW,CAACE,IAAI,CAC7B,KAAM,CAAAG,MAAM,CAAGT,aAAa,CAACM,IAAI,CACjC,KAAM,CAAAI,OAAO,CAAGP,cAAc,CAACG,IAAI,CACnC,KAAM,CAAAK,WAAW,CAAGN,iBAAiB,CAACC,IAAI,CAE1CP,QAAQ,CAAC,CACLa,IAAI,CAAE,WAAW,CAAEC,OAAO,CAAE,CACxBC,QAAQ,CAAEN,IAAI,CACdO,UAAU,CAAEN,MAAM,CAClBO,WAAW,CAAEN,OAAO,CACpBC,WAAW,CAAEA,WACjB,CACJ,CAAC,CAAC,CACN,CACA,MAAOM,KAAK,CAAE,CACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAC9B,CAGJ,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAACC,MAAM,CAAExB,MAAM,GAAKC,QAAQ,EAAI,CACpDH,KAAK,CAAC2B,IAAI,kCAAArB,MAAA,CAAkCJ,MAAM,eAAc,CAAE,MAAM,CAAEwB,MAAO,CAAC,CAAC,CAC9EE,IAAI,CAACC,GAAG,EAAI,CACT1B,QAAQ,CAAC,CAAEa,IAAI,CAAE,gBAAgB,CAAEC,OAAO,CAAEY,GAAG,CAACnB,IAAI,CAACoB,aAAc,CAAC,CAAC,CACrE3B,QAAQ,CAACF,QAAQ,CAAC4B,GAAG,CAACnB,IAAI,CAACE,IAAI,CAACD,EAAE,CAAC,CAAC,CACxC,CAAC,CAAC,CACDoB,KAAK,CAACC,CAAC,EAAIV,OAAO,CAACC,GAAG,CAACS,CAAC,CAACR,OAAO,CAAC,CAAC,CAE3C,CAAC,CAED,MAAO,MAAM,CAAAS,OAAO,CAAIC,IAAI,EAAK/B,QAAQ,EAAI,CACzC,MAAO,CAAAH,KAAK,CAAC2B,IAAI,CAAC,+BAA+B,CAAE,CAAEO,IAAI,CAAEA,IAAK,CAAC,CAAC,CAC7DN,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACnB,IAAI,CAACC,EAAE,CAAC,CACxBiB,IAAI,CAACjB,EAAE,EAAIR,QAAQ,CAACF,QAAQ,CAACU,EAAE,CAAC,CAAC,CAAC,CAClCoB,KAAK,CAACC,CAAC,EAAIV,OAAO,CAACC,GAAG,CAACS,CAAC,CAACR,OAAO,CAAC,CAAC,CAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}