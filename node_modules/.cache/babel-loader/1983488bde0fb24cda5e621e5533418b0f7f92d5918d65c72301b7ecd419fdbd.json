{"ast":null,"code":"// gameActions.js\nimport { mockApi } from \"../../utils/mockApi\";\nexport const getBoard = gameId => async dispatch => {\n  try {\n    const [gamePromise, playerPromise, monsterPromise] = await Promise.all([mockApi.getGame(gameId), mockApi.getPlayer(gameId), mockApi.getMonster(gameId)]);\n    const playerCardPromise = await mockApi.getPlayerCards(playerPromise.data.id);\n    dispatch({\n      type: \"GAME_DATA\",\n      payload: {\n        gameInfo: gamePromise.data,\n        playerInfo: playerPromise.data,\n        monsterInfo: monsterPromise.data,\n        playerCards: playerCardPromise.data\n      }\n    });\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport const nextTurn = (cardId, gameId) => async dispatch => {\n  try {\n    const res = await mockApi.nextTurn(gameId, cardId);\n    dispatch({\n      type: \"MONSTER_EFFECT\",\n      payload: res.data.monsterEffect\n    });\n    dispatch(getBoard(res.data.game.id));\n  } catch (e) {\n    console.error(e.message);\n  }\n};\nexport const NewGame = name => async dispatch => {\n  try {\n    const res = await mockApi.newGame(name);\n    dispatch(getBoard(res.data.id));\n  } catch (e) {\n    console.error(e.message);\n  }\n};","map":{"version":3,"names":["mockApi","getBoard","gameId","dispatch","gamePromise","playerPromise","monsterPromise","Promise","all","getGame","getPlayer","getMonster","playerCardPromise","getPlayerCards","data","id","type","payload","gameInfo","playerInfo","monsterInfo","playerCards","error","console","message","nextTurn","cardId","res","monsterEffect","game","e","NewGame","name","newGame"],"sources":["/Users/eri/adventureTime/src/store/actions/index.js"],"sourcesContent":["// gameActions.js\nimport { mockApi } from \"../../utils/mockApi\";\n\nexport const getBoard = (gameId) => async (dispatch) => {\n  try {\n    const [gamePromise, playerPromise, monsterPromise] = await Promise.all([\n      mockApi.getGame(gameId),\n      mockApi.getPlayer(gameId),\n      mockApi.getMonster(gameId),\n    ]);\n\n    const playerCardPromise = await mockApi.getPlayerCards(playerPromise.data.id);\n\n    dispatch({\n      type: \"GAME_DATA\",\n      payload: {\n        gameInfo: gamePromise.data,\n        playerInfo: playerPromise.data,\n        monsterInfo: monsterPromise.data,\n        playerCards: playerCardPromise.data,\n      },\n    });\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const nextTurn = (cardId, gameId) => async (dispatch) => {\n  try {\n    const res = await mockApi.nextTurn(gameId, cardId);\n    dispatch({ type: \"MONSTER_EFFECT\", payload: res.data.monsterEffect });\n    dispatch(getBoard(res.data.game.id));\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const NewGame = (name) => async (dispatch) => {\n  try {\n    const res = await mockApi.newGame(name);\n    dispatch(getBoard(res.data.id));\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,qBAAqB;AAE7C,OAAO,MAAMC,QAAQ,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAM,CAACC,WAAW,EAAEC,aAAa,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACrER,OAAO,CAACS,OAAO,CAACP,MAAM,CAAC,EACvBF,OAAO,CAACU,SAAS,CAACR,MAAM,CAAC,EACzBF,OAAO,CAACW,UAAU,CAACT,MAAM,CAAC,CAC3B,CAAC;IAEF,MAAMU,iBAAiB,GAAG,MAAMZ,OAAO,CAACa,cAAc,CAACR,aAAa,CAACS,IAAI,CAACC,EAAE,CAAC;IAE7EZ,QAAQ,CAAC;MACPa,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;QACPC,QAAQ,EAAEd,WAAW,CAACU,IAAI;QAC1BK,UAAU,EAAEd,aAAa,CAACS,IAAI;QAC9BM,WAAW,EAAEd,cAAc,CAACQ,IAAI;QAChCO,WAAW,EAAET,iBAAiB,CAACE;MACjC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAExB,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAM3B,OAAO,CAACyB,QAAQ,CAACvB,MAAM,EAAEwB,MAAM,CAAC;IAClDvB,QAAQ,CAAC;MAAEa,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEU,GAAG,CAACb,IAAI,CAACc;IAAc,CAAC,CAAC;IACrEzB,QAAQ,CAACF,QAAQ,CAAC0B,GAAG,CAACb,IAAI,CAACe,IAAI,CAACd,EAAE,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOe,CAAC,EAAE;IACVP,OAAO,CAACD,KAAK,CAACQ,CAAC,CAACN,OAAO,CAAC;EAC1B;AACF,CAAC;AAED,OAAO,MAAMO,OAAO,GAAIC,IAAI,IAAK,MAAO7B,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAM3B,OAAO,CAACiC,OAAO,CAACD,IAAI,CAAC;IACvC7B,QAAQ,CAACF,QAAQ,CAAC0B,GAAG,CAACb,IAAI,CAACC,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOe,CAAC,EAAE;IACVP,OAAO,CAACD,KAAK,CAACQ,CAAC,CAACN,OAAO,CAAC;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}