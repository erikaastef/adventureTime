{"ast":null,"code":"// mockApi.js\nlet mockGameId = 1;\nconst mockGame = {\n  id: mockGameId,\n  name: \"Adventure Time\",\n  turn: 1\n};\nconst mockPlayer = {\n  id: 101,\n  name: \"Finn\",\n  hp: 100,\n  mana: 3\n};\nconst mockMonster = {\n  id: 201,\n  name: \"Ice King\",\n  hp: 80,\n  attack: 10\n};\nconst mockCards = [{\n  id: 1,\n  name: \"Sword Slash\",\n  damage: 10,\n  cost: 1\n}, {\n  id: 2,\n  name: \"Magic Punch\",\n  damage: 15,\n  cost: 2\n}, {\n  id: 3,\n  name: \"Healing Potion\",\n  heal: 10,\n  cost: 1\n}];\nexport const mockApi = {\n  getGame: async gameId => {\n    return {\n      data: {\n        ...mockGame,\n        id: gameId\n      }\n    };\n  },\n  getPlayer: async gameId => {\n    return {\n      data: mockPlayer\n    };\n  },\n  getMonster: async gameId => {\n    return {\n      data: mockMonster\n    };\n  },\n  getPlayerCards: async playerId => {\n    return {\n      data: mockCards\n    };\n  },\n  nextTurn: async (gameId, cardId) => {\n    // Fake effect\n    const monsterEffect = {\n      action: \"attack\",\n      value: 5,\n      description: \"Ice King attacks with frost magic!\"\n    };\n    return {\n      data: {\n        game: {\n          ...mockGame,\n          turn: mockGame.turn + 1\n        },\n        monsterEffect\n      }\n    };\n  },\n  newGame: async name => {\n    mockGameId++;\n    return {\n      data: {\n        id: mockGameId,\n        name\n      }\n    };\n  }\n};","map":{"version":3,"names":["mockGameId","mockGame","id","name","turn","mockPlayer","hp","mana","mockMonster","attack","mockCards","damage","cost","heal","mockApi","getGame","gameId","data","getPlayer","getMonster","getPlayerCards","playerId","nextTurn","cardId","monsterEffect","action","value","description","game","newGame"],"sources":["/Users/eri/adventureTime/src/utils/mockApi.js"],"sourcesContent":["// mockApi.js\nlet mockGameId = 1;\n\nconst mockGame = {\n  id: mockGameId,\n  name: \"Adventure Time\",\n  turn: 1,\n};\n\nconst mockPlayer = {\n  id: 101,\n  name: \"Finn\",\n  hp: 100,\n  mana: 3,\n};\n\nconst mockMonster = {\n  id: 201,\n  name: \"Ice King\",\n  hp: 80,\n  attack: 10,\n};\n\nconst mockCards = [\n  { id: 1, name: \"Sword Slash\", damage: 10, cost: 1 },\n  { id: 2, name: \"Magic Punch\", damage: 15, cost: 2 },\n  { id: 3, name: \"Healing Potion\", heal: 10, cost: 1 },\n];\n\nexport const mockApi = {\n  getGame: async (gameId) => {\n    return { data: { ...mockGame, id: gameId } };\n  },\n\n  getPlayer: async (gameId) => {\n    return { data: mockPlayer };\n  },\n\n  getMonster: async (gameId) => {\n    return { data: mockMonster };\n  },\n\n  getPlayerCards: async (playerId) => {\n    return { data: mockCards };\n  },\n\n  nextTurn: async (gameId, cardId) => {\n    // Fake effect\n    const monsterEffect = {\n      action: \"attack\",\n      value: 5,\n      description: \"Ice King attacks with frost magic!\",\n    };\n\n    return {\n      data: {\n        game: { ...mockGame, turn: mockGame.turn + 1 },\n        monsterEffect,\n      },\n    };\n  },\n\n  newGame: async (name) => {\n    mockGameId++;\n    return { data: { id: mockGameId, name } };\n  },\n};\n"],"mappings":"AAAA;AACA,IAAIA,UAAU,GAAG,CAAC;AAElB,MAAMC,QAAQ,GAAG;EACfC,EAAE,EAAEF,UAAU;EACdG,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,UAAU,GAAG;EACjBH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,MAAM;EACZG,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBN,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,UAAU;EAChBG,EAAE,EAAE,EAAE;EACNG,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB;EAAER,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEQ,MAAM,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAE,CAAC,EACnD;EAAEV,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEQ,MAAM,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAE,CAAC,EACnD;EAAEV,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEU,IAAI,EAAE,EAAE;EAAED,IAAI,EAAE;AAAE,CAAC,CACrD;AAED,OAAO,MAAME,OAAO,GAAG;EACrBC,OAAO,EAAE,MAAOC,MAAM,IAAK;IACzB,OAAO;MAAEC,IAAI,EAAE;QAAE,GAAGhB,QAAQ;QAAEC,EAAE,EAAEc;MAAO;IAAE,CAAC;EAC9C,CAAC;EAEDE,SAAS,EAAE,MAAOF,MAAM,IAAK;IAC3B,OAAO;MAAEC,IAAI,EAAEZ;IAAW,CAAC;EAC7B,CAAC;EAEDc,UAAU,EAAE,MAAOH,MAAM,IAAK;IAC5B,OAAO;MAAEC,IAAI,EAAET;IAAY,CAAC;EAC9B,CAAC;EAEDY,cAAc,EAAE,MAAOC,QAAQ,IAAK;IAClC,OAAO;MAAEJ,IAAI,EAAEP;IAAU,CAAC;EAC5B,CAAC;EAEDY,QAAQ,EAAE,MAAAA,CAAON,MAAM,EAAEO,MAAM,KAAK;IAClC;IACA,MAAMC,aAAa,GAAG;MACpBC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE;IACf,CAAC;IAED,OAAO;MACLV,IAAI,EAAE;QACJW,IAAI,EAAE;UAAE,GAAG3B,QAAQ;UAAEG,IAAI,EAAEH,QAAQ,CAACG,IAAI,GAAG;QAAE,CAAC;QAC9CoB;MACF;IACF,CAAC;EACH,CAAC;EAEDK,OAAO,EAAE,MAAO1B,IAAI,IAAK;IACvBH,UAAU,EAAE;IACZ,OAAO;MAAEiB,IAAI,EAAE;QAAEf,EAAE,EAAEF,UAAU;QAAEG;MAAK;IAAE,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}