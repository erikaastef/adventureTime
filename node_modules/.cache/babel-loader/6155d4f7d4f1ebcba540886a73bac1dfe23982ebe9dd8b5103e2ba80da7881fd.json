{"ast":null,"code":"// gameActions.js\nimport { mockApi } from \"../mockApi\";\nexport const getBoard = gameId => dispatch => {\n  const playerPromise = mockApi.getPlayer(gameId);\n  const monsterPromise = mockApi.getMonster(gameId);\n  const gamePromise = mockApi.getGame(gameId);\n  const playerCardPromise = mockApi.getPlayerCards(playerPromise.data.id);\n  const game = gamePromise.data;\n  const player = playerPromise.data;\n  const monster = monsterPromise.data;\n  const playerCards = playerCardPromise.data;\n  dispatch({\n    type: \"GAME_DATA\",\n    payload: {\n      gameInfo: game,\n      playerInfo: player,\n      monsterInfo: monster,\n      playerCards: playerCards\n    }\n  });\n};\nexport const nextTurn = (cardId, gameId) => dispatch => {\n  const res = mockApi.nextTurn(gameId, cardId);\n  dispatch({\n    type: \"MONSTER_EFFECT\",\n    payload: res.data.monsterEffect\n  });\n  dispatch(getBoard(res.data.game.id));\n};\nexport const NewGame = name => dispatch => {\n  const res = mockApi.newGame(name);\n  dispatch(getBoard(res.data.id));\n};","map":{"version":3,"names":["mockApi","getBoard","gameId","dispatch","playerPromise","getPlayer","monsterPromise","getMonster","gamePromise","getGame","playerCardPromise","getPlayerCards","data","id","game","player","monster","playerCards","type","payload","gameInfo","playerInfo","monsterInfo","nextTurn","cardId","res","monsterEffect","NewGame","name","newGame"],"sources":["/Users/eri/adventureTime/src/store/actions/index.js"],"sourcesContent":["// gameActions.js\nimport { mockApi } from \"../mockApi\";\n\nexport const getBoard = (gameId) =>  (dispatch) => {\n  \n    const playerPromise = mockApi.getPlayer(gameId);\n    const monsterPromise = mockApi.getMonster(gameId);\n    const gamePromise = mockApi.getGame(gameId);\n    const playerCardPromise = mockApi.getPlayerCards(playerPromise.data.id);\n\n    const game = gamePromise.data;\n    const player = playerPromise.data;\n    const monster = monsterPromise.data;\n    const playerCards = playerCardPromise.data;\n\n    dispatch({\n      type: \"GAME_DATA\",\n      payload: {\n        gameInfo: game,\n        playerInfo: player,\n        monsterInfo: monster,\n        playerCards: playerCards,\n      },\n    });\n \n};\n\nexport const nextTurn = (cardId, gameId) =>  (dispatch) => {\n\n    const res =  mockApi.nextTurn(gameId, cardId);\n\n    dispatch({ type: \"MONSTER_EFFECT\", payload: res.data.monsterEffect });\n    dispatch(getBoard(res.data.game.id));\n\n};\n\nexport const NewGame = (name) =>  (dispatch) => {\n\n    const res =  mockApi.newGame(name);\n    dispatch(getBoard(res.data.id));\n\n};\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,YAAY;AAEpC,OAAO,MAAMC,QAAQ,GAAIC,MAAM,IAAOC,QAAQ,IAAK;EAE/C,MAAMC,aAAa,GAAGJ,OAAO,CAACK,SAAS,CAACH,MAAM,CAAC;EAC/C,MAAMI,cAAc,GAAGN,OAAO,CAACO,UAAU,CAACL,MAAM,CAAC;EACjD,MAAMM,WAAW,GAAGR,OAAO,CAACS,OAAO,CAACP,MAAM,CAAC;EAC3C,MAAMQ,iBAAiB,GAAGV,OAAO,CAACW,cAAc,CAACP,aAAa,CAACQ,IAAI,CAACC,EAAE,CAAC;EAEvE,MAAMC,IAAI,GAAGN,WAAW,CAACI,IAAI;EAC7B,MAAMG,MAAM,GAAGX,aAAa,CAACQ,IAAI;EACjC,MAAMI,OAAO,GAAGV,cAAc,CAACM,IAAI;EACnC,MAAMK,WAAW,GAAGP,iBAAiB,CAACE,IAAI;EAE1CT,QAAQ,CAAC;IACPe,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;MACPC,QAAQ,EAAEN,IAAI;MACdO,UAAU,EAAEN,MAAM;MAClBO,WAAW,EAAEN,OAAO;MACpBC,WAAW,EAAEA;IACf;EACF,CAAC,CAAC;AAEN,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAGA,CAACC,MAAM,EAAEtB,MAAM,KAAOC,QAAQ,IAAK;EAEvD,MAAMsB,GAAG,GAAIzB,OAAO,CAACuB,QAAQ,CAACrB,MAAM,EAAEsB,MAAM,CAAC;EAE7CrB,QAAQ,CAAC;IAAEe,IAAI,EAAE,gBAAgB;IAAEC,OAAO,EAAEM,GAAG,CAACb,IAAI,CAACc;EAAc,CAAC,CAAC;EACrEvB,QAAQ,CAACF,QAAQ,CAACwB,GAAG,CAACb,IAAI,CAACE,IAAI,CAACD,EAAE,CAAC,CAAC;AAExC,CAAC;AAED,OAAO,MAAMc,OAAO,GAAIC,IAAI,IAAOzB,QAAQ,IAAK;EAE5C,MAAMsB,GAAG,GAAIzB,OAAO,CAAC6B,OAAO,CAACD,IAAI,CAAC;EAClCzB,QAAQ,CAACF,QAAQ,CAACwB,GAAG,CAACb,IAAI,CAACC,EAAE,CAAC,CAAC;AAEnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}