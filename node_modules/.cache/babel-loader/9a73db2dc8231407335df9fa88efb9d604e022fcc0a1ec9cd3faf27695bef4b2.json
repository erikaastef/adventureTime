{"ast":null,"code":"import axios from \"axios\";\nexport const getBoard = gameId => async dispatch => {\n  try {\n    //fetchs\n    const playerPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/player`);\n    const monsterPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/monster`);\n    const gamePromise = await axios.get(`http://game.bons.me/api/games/${gameId}`);\n\n    //PlayerCards\n    const playerCardPromise = await axios.get(`http://game.bons.me/api/players/${playerPromise.data.id}/cards`);\n\n    //Responses\n    const game = gamePromise.data;\n    const player = playerPromise.data;\n    const monster = monsterPromise.data;\n    const playerCards = playerCardPromise.data;\n    dispatch({\n      type: \"GAME_DATA\",\n      payload: {\n        gameInfo: game,\n        playerInfo: player,\n        monsterInfo: monster,\n        playerCards: playerCards\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const nextTurn = (cardId, gameId) => dispatch => {\n  axios.post(`http://game.bons.me/api/games/${gameId}/next-turn`, {\n    \"card\": cardId\n  }).then(res => {\n    dispatch({\n      type: \"MONSTER_EFFECT\",\n      payload: res.data.monsterEffect\n    });\n    dispatch(getBoard(res.data.game.id));\n  }).catch(e => console.log(e.message));\n};\nexport const NewGame = name => dispatch => {\n  return axios.post('http://game.bons.me/api/games', {\n    name: name\n  }).then(res => res.data.id).then(id => dispatch(getBoard(id))).catch(e => console.log(e.message));\n};","map":{"version":3,"names":["axios","getBoard","gameId","dispatch","playerPromise","get","monsterPromise","gamePromise","playerCardPromise","data","id","game","player","monster","playerCards","type","payload","gameInfo","playerInfo","monsterInfo","error","console","log","message","nextTurn","cardId","post","then","res","monsterEffect","catch","e","NewGame","name"],"sources":["/Users/eri/adventureTime/src/store/actions/index.js"],"sourcesContent":["\nimport axios from \"axios\"\n\nexport const getBoard = (gameId) => async dispatch => {\n    try {\n\n        //fetchs\n        const playerPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/player`)\n        const monsterPromise = await axios.get(`http://game.bons.me/api/games/${gameId}/monster`)\n        const gamePromise = await axios.get(`http://game.bons.me/api/games/${gameId}`)\n\n        //PlayerCards\n        const playerCardPromise = await axios.get(`http://game.bons.me/api/players/${playerPromise.data.id}/cards`)\n\n        //Responses\n        const game = gamePromise.data\n        const player = playerPromise.data\n        const monster = monsterPromise.data\n        const playerCards = playerCardPromise.data\n\n        dispatch({\n            type: \"GAME_DATA\", payload: {\n                gameInfo: game,\n                playerInfo: player,\n                monsterInfo: monster,\n                playerCards: playerCards\n            }\n        })\n    }\n    catch (error) {\n        console.log(error.message)\n    }\n\n\n}\n\nexport const nextTurn = (cardId, gameId) => dispatch => {\n    axios.post(`http://game.bons.me/api/games/${gameId}/next-turn`, { \"card\": cardId })\n        .then(res => {\n            dispatch({ type: \"MONSTER_EFFECT\", payload: res.data.monsterEffect })\n            dispatch(getBoard(res.data.game.id))\n        })\n        .catch(e => console.log(e.message))\n\n}\n\nexport const NewGame = (name) => dispatch => {\n    return axios.post('http://game.bons.me/api/games', { name: name })\n        .then(res => res.data.id)\n        .then(id => dispatch(getBoard(id)))\n        .catch(e => console.log(e.message))\n}\n\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAIC,MAAM,IAAK,MAAMC,QAAQ,IAAI;EAClD,IAAI;IAEA;IACA,MAAMC,aAAa,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,iCAAiCH,MAAM,SAAS,CAAC;IACvF,MAAMI,cAAc,GAAG,MAAMN,KAAK,CAACK,GAAG,CAAC,iCAAiCH,MAAM,UAAU,CAAC;IACzF,MAAMK,WAAW,GAAG,MAAMP,KAAK,CAACK,GAAG,CAAC,iCAAiCH,MAAM,EAAE,CAAC;;IAE9E;IACA,MAAMM,iBAAiB,GAAG,MAAMR,KAAK,CAACK,GAAG,CAAC,mCAAmCD,aAAa,CAACK,IAAI,CAACC,EAAE,QAAQ,CAAC;;IAE3G;IACA,MAAMC,IAAI,GAAGJ,WAAW,CAACE,IAAI;IAC7B,MAAMG,MAAM,GAAGR,aAAa,CAACK,IAAI;IACjC,MAAMI,OAAO,GAAGP,cAAc,CAACG,IAAI;IACnC,MAAMK,WAAW,GAAGN,iBAAiB,CAACC,IAAI;IAE1CN,QAAQ,CAAC;MACLY,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;QACxBC,QAAQ,EAAEN,IAAI;QACdO,UAAU,EAAEN,MAAM;QAClBO,WAAW,EAAEN,OAAO;QACpBC,WAAW,EAAEA;MACjB;IACJ,CAAC,CAAC;EACN,CAAC,CACD,OAAOM,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AAGJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEvB,MAAM,KAAKC,QAAQ,IAAI;EACpDH,KAAK,CAAC0B,IAAI,CAAC,iCAAiCxB,MAAM,YAAY,EAAE;IAAE,MAAM,EAAEuB;EAAO,CAAC,CAAC,CAC9EE,IAAI,CAACC,GAAG,IAAI;IACTzB,QAAQ,CAAC;MAAEY,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEY,GAAG,CAACnB,IAAI,CAACoB;IAAc,CAAC,CAAC;IACrE1B,QAAQ,CAACF,QAAQ,CAAC2B,GAAG,CAACnB,IAAI,CAACE,IAAI,CAACD,EAAE,CAAC,CAAC;EACxC,CAAC,CAAC,CACDoB,KAAK,CAACC,CAAC,IAAIV,OAAO,CAACC,GAAG,CAACS,CAAC,CAACR,OAAO,CAAC,CAAC;AAE3C,CAAC;AAED,OAAO,MAAMS,OAAO,GAAIC,IAAI,IAAK9B,QAAQ,IAAI;EACzC,OAAOH,KAAK,CAAC0B,IAAI,CAAC,+BAA+B,EAAE;IAAEO,IAAI,EAAEA;EAAK,CAAC,CAAC,CAC7DN,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACnB,IAAI,CAACC,EAAE,CAAC,CACxBiB,IAAI,CAACjB,EAAE,IAAIP,QAAQ,CAACF,QAAQ,CAACS,EAAE,CAAC,CAAC,CAAC,CAClCoB,KAAK,CAACC,CAAC,IAAIV,OAAO,CAACC,GAAG,CAACS,CAAC,CAACR,OAAO,CAAC,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}